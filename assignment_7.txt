7. Lists and Keys
THEORY EXERCISE

• Question 1: How do you render a list of items in React? Why is it important to use keys when rendering lists?

Answer:

Rendering Lists:

To render a list of items in React, use the map() function to iterate over the array and return JSX for each item.
Example:
jsx
Copy code
const fruits = ["Apple", "Banana", "Cherry"];

return (
  <ul>
    {fruits.map((fruit, index) => (
      <li key={index}>{fruit}</li>
    ))}
  </ul>
);


Importance of Keys:

Keys help React efficiently update and re-render lists by identifying which items have changed, been added, or removed.
Without keys, React may unnecessarily re-render all items, reducing performance.

• Question 2: What are keys in React, and what happens if you do not provide a unique key?

Answer:

Keys in React:

Keys are unique identifiers for each element in a list.
They allow React to track which items in a list are added, removed, or updated.
Keys are typically assigned using a unique property of each item (e.g., id).

What Happens Without Keys:

React will still render the list but might exhibit unexpected behavior during updates, such as incorrect item reordering or mismatched states.
This happens because React cannot accurately differentiate between list items without unique keys.
LAB EXERCISE

• Task 1: Create a React component that renders a list of items (e.g., a list of fruit names). Use the map() function to render each item in the list.

Solution:

Using Functional Component:

jsx
Copy code
import React from 'react';

const FruitList = () => {
  const fruits = ["Apple", "Banana", "Cherry", "Date", "Grapes"];

  return (
    <div>
      <h3>Fruit List:</h3>
      <ul>
        {fruits.map((fruit, index) => (
          <li key={index}>{fruit}</li>
        ))}
      </ul>
    </div>
  );
};

export default FruitList;


• Task 2: Create a list of users where each user has a unique ID. Render the user list using React and assign a unique key to each user.

Solution:

Using Functional Component:

jsx
Copy code
import React from 'react';

const UserList = () => {
  const users = [
    { id: 1, name: "Alice" },
    { id: 2, name: "Bob" },
    { id: 3, name: "Charlie" },
  ];

  return (
    <div>
      <h3>User List:</h3>
      <ul>
        {users.map((user) => (
          <li key={user.id}>{user.name}</li>
        ))}
      </ul>
    </div>
  );
};

export default UserList;


Using Class Component:

jsx
Copy code
import React, { Component } from 'react';

class UserList extends Component {
  render() {
    const users = [
      { id: 1, name: "Alice" },
      { id: 2, name: "Bob" },
      { id: 3, name: "Charlie" },
    ];

    return (
      <div>
        <h3>User List:</h3>
        <ul>
          {users.map((user) => (
            <li key={user.id}>{user.name}</li>
          ))}
        </ul>
      </div>
    );
  }
}


export default UserList;